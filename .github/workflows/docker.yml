name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to compare

      - name: Check if package.json version changed
        id: version-check
        run: |
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT
            exit 0
          fi

          current_version=$(jq -r .version package.json)
          previous_version=$(git show HEAD^:package.json | jq -r .version 2>/dev/null || echo "null")

          if [ "$previous_version" = "null" ] || [ "$current_version" != "$previous_version" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=$current_version" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "version=$current_version" >> $GITHUB_OUTPUT
          fi

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Wait for Docker Hub availability
        run: |
          max_attempts=5
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Checking Docker Hub availability (attempt $attempt/$max_attempts)..."
            if curl -sf https://registry-1.docker.io/v2/ > /dev/null 2>&1; then
              echo "Docker Hub is available"
              break
            else
              echo "Docker Hub is not available, waiting 30 seconds..."
              if [ $attempt -eq $max_attempts ]; then
                echo "Docker Hub unavailable after $max_attempts attempts, continuing anyway..."
                break
              fi
              sleep 30
              attempt=$((attempt + 1))
            fi
          done

      - name: Configure Docker daemon with registry mirrors
        run: |
          sudo mkdir -p /etc/docker
          sudo tee /etc/docker/daemon.json > /dev/null <<EOF
          {
            "registry-mirrors": [
              "https://mirror.gcr.io",
              "https://daocloud.io",
              "https://registry.docker-cn.com"
            ],
            "max-concurrent-downloads": 10,
            "max-concurrent-uploads": 10
          }
          EOF
          sudo systemctl restart docker
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
        with:
          driver-opts: |
            image=moby/buildkit:v0.12.5

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for versioned build
        if: steps.version-check.outputs.version_changed == 'true'
        id: meta-version
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=main
            type=raw,value=${{ steps.version-check.outputs.version }}

      - name: Extract Docker metadata for dev build
        if: steps.version-check.outputs.version_changed == 'false'
        id: meta-dev
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=raw,value=dev

      - name: Build and push versioned Docker image (main & version)
        if: steps.version-check.outputs.version_changed == 'true'
        id: build-and-push-version
        uses: docker/build-push-action@v5.4.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-version.outputs.tags }}
          labels: ${{ steps.meta-version.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          retry: 3
          retry-delay: 30

      - name: Build and push dev Docker image
        if: steps.version-check.outputs.version_changed == 'false'
        id: build-and-push-dev
        uses: docker/build-push-action@v5.4.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-dev.outputs.tags }}
          labels: ${{ steps.meta-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          retry: 3
          retry-delay: 30

      - name: Sign the published versioned Docker image
        if: github.event_name != 'pull_request' && steps.version-check.outputs.version_changed == 'true'
        env:
          TAGS: ${{ steps.meta-version.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-version.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Sign the published dev Docker image
        if: github.event_name != 'pull_request' && steps.version-check.outputs.version_changed == 'false'
        env:
          TAGS: ${{ steps.meta-dev.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-dev.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
